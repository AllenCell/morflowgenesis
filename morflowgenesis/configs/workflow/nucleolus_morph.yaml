working_dir: /allen/aics/assay-dev/users/Benji/hydra_workflow/workings
deployment_name: nucleolus_morph
work_pool_name: k8s

debug: True
deploy: true

pull:
    repository: https://github.com/aics-int/morflowgenesis.git
    branch: dev
    secret_block_name: dev-morflowgenesis-benji-pat

path: morflowgenesis
entrypoint: morflowgenesis/bin/run_workflow.py:morflowgenesis

base_image: docker-modeling-local.artifactory.corp.alleninstitute.org/mlops/morflowgenesis:latest

#kubernetes cluster infra overrides
infra_overrides:
    #  don't use latest in production
    image: ${base_image}
    image_pull_policy: Always
    namespace: "prefect"
    resources:
        limits:
            cpu: "20000m"
            memory: "50Gi"
        requests:
            cpu: "1000m"
            memory: "1024Mi"

# dask cluster overrides
dask_cluster:
    cluster_kwargs:
        # dask worker args
        pod_template:
            image: ${base_image}
            extra_pod_config:
                volumes:
                    - name: vast-nfs
                      nfs:
                          server: aics.vast01.corp.alleninstitute.org
                          path: /aics
            extra_container_config:
                imagePullPolicy: Always
                volumeMounts:
                    - name: vast-nfs
                      mountPath: /allen/aics
                resources:
                    limits:
                        nvidia.com/gpu: 0
        deploy_mode: local
        n_workers: 5

# default gpu steps
gpu_step_overrides:
    resources:
        limits:
            cpu: "20000m"
            memory: "200Gi"
            nvidia.com/gpu: "1"
        requests:
            cpu: "1000m"
            memory: "150Gi"
            nvidia.com/gpu: "1"

steps:
    - function: morflowgenesis.steps.split_czi.split_czi
      args:
          czi_path: /allen/aics/assay-dev/MicroscopyData/Frick/2023/20230327/ZSD0/AICS86_day3_nucleolus_movie_interactive-01-1.czi/AICS86_day3_nucleolus_movie_interactive-01-1_AcquisitionBlock1.czi/AICS86_day3_nucleolus_movie_interactive-01-1_AcquisitionBlock1_pt1.czi
          # NPM1, bf, FBL
          working_dir: ${working_dir}
          output_name: 20x_raw
          channels: -1
          dimension_order_out: CZYX
          timepoints: [0, 1] #,1,2,3]
          scenes: [P4-F6]
      step_type: "gather"

    - function: morflowgenesis.steps.run_cytodl.run_cytodl
      args:
          output_name: 20x_nucseg
          input_step: split_czi_20x_raw
          config_path: ./morflowgenesis/configs/step/20x_bf_to_20x_nucseg.yaml
      dask_cluster: null
      infra_overrides: ${gpu_step_overrides}

    - function: morflowgenesis.steps.resize_image.run_resize
      args:
          output_name: 100x_nucseg
          input_step: run_cytodl_20x_nucseg
          output_shape: [120, 3120, 4620]

    - function: morflowgenesis.steps.run_cytodl.run_cytodl
      args:
          output_name: 100x_npm1
          input_step: split_czi_20x_raw
          config_path: ./morflowgenesis/configs/step/20x_npm1_to_100x_npm1.yaml
      dask_cluster: null
      infra_overrides: ${gpu_step_overrides}

    - function: morflowgenesis.steps.run_cytodl.run_cytodl
      args:
          output_name: 100x_npm1_seg
          input_step: run_cytodl_100x_npm1
          config_path: ./morflowgenesis/configs/step/100x_npm1_to_100x_npm1_seg.yaml
      dask_cluster: null
      infra_overrides: ${gpu_step_overrides}

    - function: morflowgenesis.steps.tracking.run_tracking
      args:
          output_name: tracking
          input_step: run_resize_100x_nucseg
      step_type: "gather"

    - function: morflowgenesis.steps.single_cell_dataset.single_cell_dataset
      args:
          output_name: single_cell_dataset
          splitting_step: run_resize_100x_nucseg
          raw_steps: [run_cytodl_100x_npm1]
          seg_steps: [run_cytodl_100x_npm1_seg, run_resize_100x_nucseg]
          tracking_step: run_tracking_tracking
