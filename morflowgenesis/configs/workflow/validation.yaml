working_dir: /allen/aics/assay-dev/users/Benji/hydra_workflow/workings
deployment_name: nucleolus_morph
work_pool_name: k8s

debug: True
deploy: true

pull:
    repository: https://github.com/aics-int/morflowgenesis.git
    branch: dev
    secret_block_name: dev-morflowgenesis-benji-pat

path: morflowgenesis
entrypoint: morflowgenesis/bin/run_workflow.py:morflowgenesis

base_image: docker-modeling-local.artifactory.corp.alleninstitute.org/mlops/morflowgenesis:latest

#kubernetes cluster infra overrides
infra_overrides:
    #  don't use latest in production
    image: ${base_image}
    image_pull_policy: Always
    namespace: "prefect"
    resources:
        limits:
            cpu: "20000m"
            memory: "50Gi"
        requests:
            cpu: "1000m"
            memory: "1024Mi"

# dask cluster overrides
dask_cluster:
    cluster_kwargs:
        # dask worker args
        pod_template:
            image: ${base_image}
            extra_pod_config:
                volumes:
                    - name: vast-nfs
                      nfs:
                          server: aics.vast01.corp.alleninstitute.org
                          path: /aics
            extra_container_config:
                imagePullPolicy: Always
                volumeMounts:
                    - name: vast-nfs
                      mountPath: /allen/aics
                resources:
                    limits:
                        nvidia.com/gpu: 0
        deploy_mode: local
        n_workers: 5

# default gpu steps
gpu_step_overrides:
    resources:
        limits:
            cpu: "20000m"
            memory: "200Gi"
            nvidia.com/gpu: "1"
        requests:
            cpu: "1000m"
            memory: "150Gi"
            nvidia.com/gpu: "1"

steps:
    - function: morflowgenesis.steps.image_object_from_csv.generate_objects
      args:
        csv_path: "/allen/aics/assay-dev/users/Benji/CurrentProjects/im2im_dev/cyto-dl/data/20x_cell_and_nuc_from_bf/subset_skoots/lamin_label/test_subset.csv"
        working_dir: ${working_dir}
        source_column: "raw"
        non_source_columns: ["nucseg"]
      step_type: "gather"

    - function: morflowgenesis.steps.run_cytodl.run_cytodl
      args:
        output_name: 20x_nucseg
        input_step: generate_objects_raw
        config_path: ./morflowgenesis/configs/step/20x_bf_to_20x_nucseg.yaml
      dask_cluster: null
      infra_overrids: ${gpu_step_overrides}

    - function: morflowgenesis.steps.single_cell_dataset.single_cell_dataset
      args:
        output_name: pred
        splitting_step: run_cytodl_20x_nucseg
        raw_steps: []
        seg_steps: [run_cytodl_20x_nucseg]
    - function: morflowgenesis.steps.single_cell_dataset.single_cell_dataset
      args:
        output_name: gt
        splitting_step: generate_objects_nucseg
        raw_steps: []
        seg_steps: [generate_objects_nucseg]
    - function: morflowgenesis.steps.cell_matching.match_cells
      args:
        output_name: matched_cells
        pred_step: single_cell_dataset_pred
        label_step: single_cell_dataset_gt
    - function: morflowgenesis.steps.feature_calculation.calculate_features
      args:
        output_name: matched_features
        reference_step: single_cell_dataset_gt
        input_step: single_cell_dataset_pred
        matching_step: match_cells_matched_cells
        segmentation_columns: [crop_seg_path]
        features:
            - shcoeff
            - volume
            - height
            - n_pieces

    - function: morflowgenesis.steps.compare_features.run_plot
      args:
        output_name: plot
        input_step: get_features_matched_features
        pca_n_components: 10
        features:
            - shcoeff
            - volume
            - height
