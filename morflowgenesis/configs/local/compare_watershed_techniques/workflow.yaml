working_dir: //allen/aics/assay-dev/users/Benji/CurrentProjects/validation/watershed_techniques
deployment_name: bf_to_nucseg

local_run: True

steps:
    # - function: morflowgenesis.steps.image_object_from_csv.generate_objects
    #   args:
    #     csv_path: //allen/aics/assay-dev/users/Benji/CurrentProjects/hydra_workflow/morflowgenesis/morflowgenesis/configs/direct_seg_vs_nucmorph_tf_and_seg/manifest.csv
    #     working_dir: ${working_dir}
    #     source_column: lr
    #     non_source_columns: [tf_and_seg, hr]
    #   step_type: "init"

    # # run segmentation from 20x
    # - function: morflowgenesis.steps.run_cytodl_gather.run_cytodl
    #   args:
    #     output_name: 100x_lamin_seg
    #     input_step: generate_objects_lr
    #     config_path: //allen/aics/assay-dev/users/Benji/CurrentProjects/hydra_workflow/morflowgenesis/morflowgenesis/configs/direct_seg_vs_nucmorph_tf_and_seg/20x_lamin_to_100x_nucseg_high_semantic_loss.yaml
    #     run_id: 28968a81015b4dfb8f16f14c13f4c1c7 
    #   step_type: "gather"

    # watershed on hr pred lamin
    - function: morflowgenesis.steps.segmentation_seeded_watershed.run_watershed
      args:
        output_name: nucseg_smooth_xydilate_2
        raw_input_step: generate_objects_hr
        seg_input_step: run_cytodl_100x_lamin_seg
        mode: 'erosion'
        erosion: 5
        include_edge: False
        smooth: True

    # create dataset with pred 100x lamin, "gt"100x lamin, and nucseg
    - function: morflowgenesis.steps.single_cell_dataset.single_cell_dataset
      args:
        output_name: single_cell
        splitting_step: run_watershed_nucseg_smooth_xydilate_2
        raw_steps: [generate_objects_hr]
        seg_steps: [ run_watershed_nucseg_smooth_xydilate_2]
        seg_steps_rename: [xy_dilate2]
        keep_lcc: True
        mask: False
        iou_thresh: 0.7
        include_edge_cells: False
      step_type: 'gather'

    - function: morflowgenesis.steps.feature_calculation.calculate_features
      args:
        output_name: features
        input_step: single_cell_dataset_single_cell
        features:
            - height
            - volume
            # - shcoeff
      step_type: 'gather'

    - function: morflowgenesis.steps.contact_sheet.segmentation_contact_sheet
      args:
        output_name: pred_contact_sheet
        single_cell_dataset_step: single_cell_dataset_single_cell
        feature_step: calculate_features_features
        raw_name: generate_objects_hr
        segmentation_name: xy_dilate2
        x_feature: volume
        y_feature: height
        seg_names: [xy_dilate2]
      step_type: 'gather'

    # - function: morflowgenesis.steps.pca.run_pca
    #   args:
    #     output_name: pca
    #     feature_step: calculate_features_features
    #     features_regex: '.*shcoeffs.*'
    #     calculate_name: smooth
    #     apply_names: [no_smooth]
    #   step_type: 'gather'
        
    # - function: morflowgenesis.steps.plot.run_plot
    #   args:
    #     output_name: plot
    #     input_step: calculate_features_features
    #     features: [volume, height]
    #     label:
    #       segmentation_name: smooth
    #       description: 'smooth'
    #     pred:
    #       - segmentation_name: no_smooth
    #         description: no_smooth
    #   step_type: 'gather'

    # - function: morflowgenesis.steps.plot.run_plot
    #   args:
    #     output_name: pca_plot
    #     input_step: run_pca_pca
    #     features: [PC1, PC2, PC3, PC4, PC5, PC6, PC7, PC8, PC9, PC10]
    #     label:
    #       segmentation_name: smooth
    #       description: 'smooth'
    #     pred:
    #       - segmentation_name: no_smooth
    #         description: no_smooth
    #   step_type: 'gather'